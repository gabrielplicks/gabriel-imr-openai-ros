turtlebot2: #namespace

    running_step: 0.04 # amount of time the control will be executed
    
    #qlearn parameters
    alpha: 0.1
    gamma: 0.7
    epsilon: 0.9
    epsilon_discount: 0.999
    nepisodes: 5000
    nsteps: 10000
   
    n_actions: 3 # We have 3 actions, Forwards,TurnLeft,TurnRight
    
    linear_forward_speed: 0.5 # Spwwed for ging fowards
    linear_turn_speed: 0.1 # Lienare speed when turning
    angular_speed: 0.3 # Angular speed when turning Left or Right
    init_linear_forward_speed: 0.0 # Initial linear speed in which we start each episode
    init_linear_turn_speed: 0.0 # Initial angular speed in shich we start each episode
    
    number_of_sectors: 3 # How many sectors we have
    min_range: 0.5 # Minimum meters below wich we consider we have crashed
    middle_range: 1.0 # Minimum meters below wich we consider we have crashed
    danger_laser_value: 2 # Value considered Ok, no wall
    middle_laser_value: 1 # Middle value
    safe_laser_value: 0 # Value considered there is an obstacle or crashed

    desired_pose:
      x: 5.0
      y: 0.0
      z: 0.0
    
    forwards_reward: 5 # Points Given to go forwards
    turn_reward: 1 # Points Given to turn as action
    end_episode_points: 200 # Points given when ending an episode
    
    # For the Wall environment
    # new_ranges: 5 # How many laser readings we jump in each observation reading, the bigger the less laser resolution
    # min_range: 0.5 # Minimum meters below wich we consider we have crashed
    # max_laser_value: 6 # Value considered Ok, no wall
    # min_laser_value: 0 # Value considered there is an obstacle or crashed